[1/5] cmd.exe /C "cd /D C:\Users\asogw\Desktop\esp32\myaws_3\EmbeddedIoT\aws_mqtt\build\esp-idf\esptool_py && C:\Users\asogw\Desktop\esp32\esp32idf\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Users/asogw/Desktop/esp32/esp32idf/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/asogw/Desktop/esp32/myaws_3/EmbeddedIoT/aws_mqtt/build/partition_table/partition-table.bin C:/Users/asogw/Desktop/esp32/myaws_3/EmbeddedIoT/aws_mqtt/build/tls_mutual_auth.bin"
tls_mutual_auth.bin binary size 0xcf0b0 bytes. Smallest app partition is 0x100000 bytes. 0x30f50 bytes (19%) free.
[2/5] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\asogw\Desktop\esp32\myaws_3\EmbeddedIoT\aws_mqtt\build\bootloader\esp-idf\esptool_py && C:\Users\asogw\Desktop\esp32\esp32idf\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Users/asogw/Desktop/esp32/esp32idf/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/asogw/Desktop/esp32/myaws_3/EmbeddedIoT/aws_mqtt/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/3] cmd.exe /C "cd /D C:\Users\asogw\Desktop\esp32\esp32idf\frameworks\esp-idf-v5.0.2\components\esptool_py && C:\Users\asogw\Desktop\esp32\esp32idf\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/asogw/Desktop/esp32/esp32idf/frameworks/esp-idf-v5.0.2 -D SERIAL_TOOL=C:/Users/asogw/Desktop/esp32/esp32idf/python_env/idf5.0_py3.11_env/Scripts/python.exe;;C:/Users/asogw/Desktop/esp32/esp32idf/frameworks/esp-idf-v5.0.2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/asogw/Desktop/esp32/myaws_3/EmbeddedIoT/aws_mqtt/build -P C:/Users/asogw/Desktop/esp32/esp32idf/frameworks/esp-idf-v5.0.2/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM5 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x20000 tls_mutual_auth.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM5
Connecting.......
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
WARNING: Detected crystal freq 41.01MHz is quite different to normalized freq 40MHz. Unsupported crystal in use?
Crystal is 40MHz
MAC: b0:b2:1c:a7:40:80
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
WARNING: Failed to communicate with the flash chip, read/write operations will fail. Try checking the chip connections or removing any other hardware connected to IOs.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00020000 to 0x000effff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26384 bytes to 16453...

A fatal error occurred: Packet content transfer stopped (received 8 bytes)
FAILED: CMakeFiles/flash C:/Users/asogw/Desktop/esp32/myaws_3/EmbeddedIoT/aws_mqtt/build/CMakeFiles/flash 
cmd.exe /C "cd /D C:\Users\asogw\Desktop\esp32\esp32idf\frameworks\esp-idf-v5.0.2\components\esptool_py && C:\Users\asogw\Desktop\esp32\esp32idf\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/asogw/Desktop/esp32/esp32idf/frameworks/esp-idf-v5.0.2 -D SERIAL_TOOL=C:/Users/asogw/Desktop/esp32/esp32idf/python_env/idf5.0_py3.11_env/Scripts/python.exe;;C:/Users/asogw/Desktop/esp32/esp32idf/frameworks/esp-idf-v5.0.2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/asogw/Desktop/esp32/myaws_3/EmbeddedIoT/aws_mqtt/build -P C:/Users/asogw/Desktop/esp32/esp32idf/frameworks/esp-idf-v5.0.2/components/esptool_py/run_serial_tool.cmake"
ninja: build stopped: subcommand failed.
